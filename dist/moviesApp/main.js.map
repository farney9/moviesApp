{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/cast-slideshow/cast-slideshow.component.ts","./src/app/components/cast-slideshow/cast-slideshow.component.html","./src/app/components/components.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/peliculas-poster-grid/peliculas-poster-grid.component.ts","./src/app/components/peliculas-poster-grid/peliculas-poster-grid.component.html","./src/app/components/slideshow/slideshow.component.ts","./src/app/components/slideshow/slideshow.component.html","./src/app/interfaces/credits.ts","./src/app/interfaces/genre.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/movie/movie.component.ts","./src/app/pages/movie/movie.component.html","./src/app/pages/pages.module.ts","./src/app/pages/search/search.component.ts","./src/app/pages/search/search.component.html","./src/app/pipes/pipes.module.ts","./src/app/pipes/poster.pipe.ts","./src/app/services/peliculas.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { MovieComponent } from './pages/movie/movie.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'movie/:id',\r\n    component: MovieComponent\r\n  },\r\n  {\r\n    path: 'search/:texto',\r\n    component: SearchComponent\r\n  },\r\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\r\n  {path: '**', pathMatch: 'full', redirectTo: 'home'}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { PeliculasService } from './services/peliculas.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'moviesApp';\r\n\r\n\r\n  constructor() {}\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container my-3 mx-lg-2\">\r\n    <router-outlet></router-outlet>\r\n\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { PagesModule } from './pages/pages.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ComponentsModule,\r\n    PagesModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { Cast } from 'src/app/interfaces/credits';\r\nimport Swiper from 'swiper';\r\n\r\n@Component({\r\n  selector: 'app-cast-slideshow',\r\n  templateUrl: './cast-slideshow.component.html',\r\n  styleUrls: ['./cast-slideshow.component.css']\r\n})\r\nexport class CastSlideshowComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() cast: Cast[];\r\n\r\n  public swiper: Swiper;\r\n\r\n  constructor() { }\r\n  ngAfterViewInit(): void {\r\n    this.swiper = new Swiper('.swiper-container', {\r\n      slidesPerView: 5.3,\r\n      freeMode: true,\r\n      spaceBetween: 15,\r\n\r\n      // Navigation arrows\r\n      // navigation: {\r\n      //   nextEl: '.swiper-button-next',\r\n      //   prevEl: '.swiper-button-prev',\r\n      // },\r\n    })  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.cast);\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"swiper-container\">\r\n    <div class=\"swiper-wrapper\">\r\n        <div \r\n            *ngFor=\"let actor of cast\"\r\n            class=\"swiper-slide text-white text-center\">\r\n            <img \r\n                class=\"img-thumbnail\"\r\n                [src]=\"actor.profile_path | poster\" \r\n                [alt]=\"actor.name\">\r\n                {{actor.name}}\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <!-- <div class=\"swiper-pagination\"></div> -->\r\n    <!-- <div class=\"swiper-button-prev\"> -->\r\n    <!-- <div class=\"swiper-button-next\"> -->\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SlideshowComponent } from './slideshow/slideshow.component';\r\nimport { PeliculasPosterGridComponent } from './peliculas-poster-grid/peliculas-poster-grid.component';\r\nimport { RatingModule } from 'ng-starrating';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { CastSlideshowComponent } from './cast-slideshow/cast-slideshow.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavbarComponent, \r\n    SlideshowComponent, PeliculasPosterGridComponent, CastSlideshowComponent\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    SlideshowComponent,\r\n    PeliculasPosterGridComponent,\r\n    CastSlideshowComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    RatingModule,\r\n    PipesModule\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  buscarPelicula(texto: string){\r\n    \r\n    texto = texto.trim();\r\n\r\n    if (texto.length === 0) { return; }\r\n\r\n    this.router.navigate(['/search', texto]);    \r\n  }\r\n}\r\n","<nav class=\"navbar sticky-top navbar-expand-md navbar-dark bg-dark\">\r\n    \r\n    <a class=\"navbar-brand\" href=\"#\">\r\n        <span class=\"mr-1 text-success\"><i class=\"fas fa-film fa-2x\"></i> MoviesApp</span>\r\n        <!-- <img class=\"mr-1\" src=\"assets/img/logo.svg\"  alt=\"\" loading=\"lazy\"> -->\r\n        \r\n    </a> \r\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n</button>\r\n\r\n<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/home\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Películas\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" routerLink=\"/home\">En cartelera hoy</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Próximamente</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Mejor valoradas</a>\r\n            </div>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuGenero\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Géneros\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuGenero\">\r\n              <a class=\"dropdown-item\" routerLink=\"/home\">Acción</a>\r\n              <a class=\"dropdown-item active\" href=\"#\">Adult</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Aventura</a>\r\n            </div>\r\n        </li>\r\n\r\n    </ul>\r\n    <div class=\"form-inline my-2 my-lg-0\">\r\n        <input \r\n            #txtBuscar\r\n            (keyup.enter)=\"buscarPelicula(txtBuscar.value)\"\r\n            class=\"form-control mr-sm-2 hvr-grow\" \r\n            type=\"search\" \r\n            placeholder=\"Search your movie\" \r\n            aria-label=\"Search\">\r\n        <button \r\n            (click)=\"buscarPelicula(txtBuscar.value)\"\r\n            class=\"btn btn-outline-success my-2 my-sm-0 rounded-pill\" \r\n            type=\"submit\">Search</button>\r\n    </div>\r\n</div>\r\n</nav>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StarRatingComponent } from 'ng-starrating';\r\nimport { Movies } from 'src/app/interfaces/cartelera-response';\r\nimport { PeliculasService } from 'src/app/services/peliculas.service';\r\n\r\n@Component({\r\n  selector: 'app-peliculas-poster-grid',\r\n  templateUrl: './peliculas-poster-grid.component.html',\r\n  styleUrls: ['./peliculas-poster-grid.component.css']\r\n})\r\nexport class PeliculasPosterGridComponent implements OnInit {\r\n\r\n  @Input() movies: Movies[];\r\n\r\n  constructor(private peliculasService: PeliculasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.movies);\r\n  }\r\n\r\n  onRate($event:{oldValue:number, newValue:number, starRating:StarRatingComponent}) {\r\n    alert(`Old Value:${$event.oldValue}, \r\n      New Value: ${$event.newValue}, \r\n      Checked Color: ${$event.starRating.checkedcolor}, \r\n      Unchecked Color: ${$event.starRating.uncheckedcolor}`);\r\n  }\r\n\r\n  onMovieClick(movie: Movies){\r\n\r\n    this.router.navigate(['/movie', movie.id])\r\n\r\n    // console.log(movie);\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3 my-3\" *ngFor=\"let movie of movies\">\r\n        <img\r\n            role=\"button\"\r\n            (click)=\"onMovieClick(movie)\"\r\n            class=\"img-fluid hvr-grow rounded\" \r\n            [src]=\"movie.poster_path | poster\">\r\n            <div class=\"mt-3\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <h3>{{movie.title}}</h3>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <span class=\"badge badge-pill badge-success\">{{movie.release_date | date:'yyyy'}}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"col-10 text-white\">\r\n                        <star-rating \r\n                            [value]=\"movie.vote_average\" \r\n                            totalstars=\"10\" \r\n                            checkedcolor=\"gold\" \r\n                            uncheckedcolor=\"gray\" \r\n                            size=\"16px\" \r\n                            readonly=\"false\"\r\n                            (rate)=\"onRate($event)\">\r\n                    </star-rating>\r\n                    </div>\r\n                    <div class=\"col-2 text-white\">{{movie.vote_average | number:'1.1-2'}}</div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { Movies } from 'src/app/interfaces/cartelera-response';\r\nimport Swiper from 'swiper';\r\n\r\n@Component({\r\n  selector: 'app-slideshow',\r\n  templateUrl: './slideshow.component.html',\r\n  styleUrls: ['./slideshow.component.css']\r\n})\r\nexport class SlideshowComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() movies: Movies[];\r\n\r\n  public mySwiper: Swiper;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n   this.mySwiper = new Swiper('.swiper-container', {\r\n      // Optional parameters\r\n      centeredSlides: true,\r\n      autoplay: {\r\n        delay: 3000,\r\n        disableOnInteraction: false,\r\n      },\r\n      loop: true,\r\n\r\n      // If we need pagination\r\n      pagination: {\r\n        el: '.swiper-pagination',\r\n        dynamicBullets: true,\r\n        clickable: true,\r\n      },\r\n\r\n      // Navigation arrows\r\n      navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n      },\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.movies);\r\n  }\r\n\r\n  onSlideNext(){\r\n    this.mySwiper.slideNext();\r\n  }\r\n\r\n  onSlidePrev(){\r\n    this.mySwiper.slidePrev();\r\n  }\r\n}\r\n","<!-- Slider main container -->\r\n<div class=\"swiper-container\">\r\n    <!-- Additional required wrapper -->\r\n    <div class=\"swiper-wrapper\">\r\n        <!-- Slides -->\r\n        <div \r\n            *ngFor=\"let movie of movies\" class=\"swiper-slide\"\r\n            [ngStyle]=\"{\r\n                'background-size': 'cover',\r\n                'background-image': 'url(https://image.tmdb.org/t/p/w500' + movie.backdrop_path +')'\r\n            }\">\r\n            <div class=\"movie-description\">\r\n                <h3>{{movie.title}}</h3>\r\n                <p>{{movie.overview | slice:0:180}}...</p>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    </div>\r\n    <!-- If we need pagination -->\r\n    <div class=\"swiper-pagination\"></div>\r\n\r\n    <!-- If we need navigation buttons -->\r\n    <div (click)=\"onSlidePrev()\" class=\"swiper-button-prev\"></div>\r\n    <div (click)=\"onSlideNext()\" class=\"swiper-button-next\"></div>\r\n\r\n    <!-- If we need scrollbar -->\r\n    <div class=\"swiper-scrollbar\"></div>\r\n</div>","export interface Credits {\r\n    id:   number;\r\n    cast: Cast[];\r\n    crew: Cast[];\r\n}\r\n\r\nexport interface Cast {\r\n    adult:                boolean;\r\n    gender:               number;\r\n    id:                   number;\r\n    known_for_department: string;\r\n    name:                 string;\r\n    original_name:        string;\r\n    popularity:           number;\r\n    profile_path:         null | string;\r\n    cast_id?:             number;\r\n    character?:           string;\r\n    credit_id:            string;\r\n    order?:               number;\r\n    department?:          string;\r\n    job?:                 string;\r\n}\r\n","export interface Genre {\r\n    genres: GenreElement[];\r\n}\r\n\r\nexport interface GenreElement {\r\n    id:   number;\r\n    name: string;\r\n}","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\r\nimport { Movies } from 'src/app/interfaces/cartelera-response';\r\nimport { PeliculasService } from 'src/app/services/peliculas.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  public moviesSlideshow: Movies[] = []\r\n  public movies: Movies[] = []\r\n\r\n  @HostListener('window:scroll',['$event'])\r\n\r\n  onScroll(){\r\n    const pos = (document.documentElement.scrollTop || document.body.scrollTop) + 1300;\r\n    const max = (document.documentElement.scrollHeight || document.body.scrollHeight);\r\n    \r\n    if (pos > max) {\r\n      //TODO llamar al  servicio\r\n      if (this.peliculasService.isLoadig) { return; }\r\n\r\n      this.peliculasService.getCartelera().subscribe( movies => {\r\n        this.movies.push(...movies);\r\n      })\r\n    }\r\n\r\n\r\n    // console.log('llamar servicio');\r\n    \r\n  }\r\n\r\n  constructor(private peliculasService: PeliculasService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.peliculasService.getCartelera()\r\n    .subscribe( movies => {\r\n      // console.log(resp.results);\r\n      this.movies = movies;\r\n      this.moviesSlideshow = movies;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.peliculasService.resetCarteleraPage();\r\n  }\r\n\r\n}\r\n","<h1>Cartelera</h1>\r\n<div class=\"row\" *ngIf=\"movies.length > 0\">\r\n    <div class=\"col-12\">\r\n        <app-slideshow [movies]=\"moviesSlideshow\"></app-slideshow>\r\n    </div>\r\n</div>\r\n<h2 class=\"mt-3 animate__animated animate__slideInRight\">En cartelera hoy</h2>\r\n\r\n<app-peliculas-poster-grid\r\n    *ngIf=\"movies.length > 0\"\r\n    [movies]=\"movies\"></app-peliculas-poster-grid>\r\n\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Cast, Credits } from 'src/app/interfaces/credits';\r\nimport { MovieDetails } from 'src/app/interfaces/movie-details';\r\nimport { PeliculasService } from 'src/app/services/peliculas.service';\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: ['./movie.component.css']\r\n})\r\nexport class MovieComponent implements OnInit {\r\n\r\n  public pelicula: MovieDetails;\r\n  public cast: Cast[] = [];\r\n\r\n  constructor( private activatedRoute: ActivatedRoute,\r\n               private peliculasService: PeliculasService,\r\n               private location: Location,\r\n               private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    // const id =  this.activatedRoute.snapshot.params.id;\r\n    \r\n    // otra forma de extraer el id es através de la des estructuración\r\n    const {id} =  this.activatedRoute.snapshot.params;\r\n\r\n    combineLatest([\r\n      this.peliculasService.getMovieDetails(id),\r\n      this.peliculasService.getCredits(id)\r\n\r\n    ]).subscribe(([movie, cast]) => {\r\n      // console.log(movie, cast);\r\n      if (!movie) {\r\n        this.router.navigateByUrl('/home');\r\n        return;\r\n      }\r\n      // console.log(movie);\r\n      this.pelicula = movie;      \r\n      this.cast = cast;\r\n\r\n    })\r\n    \r\n    // this.peliculasService.getMovieDetails(id).subscribe(movie => {\r\n      // if (!movie) {\r\n      //   this.router.navigateByUrl('/home');\r\n      //   return;\r\n      // }\r\n      // // console.log(movie);\r\n      // this.pelicula = movie;\r\n    // });\r\n    \r\n    // this.peliculasService.getCredits(id).subscribe( cast => {\r\n    //   this.cast = cast;\r\n    //   console.log(cast);\r\n      \r\n    // });\r\n  }\r\n\r\n  onReturn(){\r\n    this.location.back();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"pelicula\">\r\n    <div class=\"col-md-4\">\r\n        <!-- Imagen -->\r\n        <img [src]=\"pelicula.poster_path | poster\" \r\n             [alt]=\"pelicula.title\"\r\n             class=\"img-thumbnail\">\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n        <!-- Detalle -->\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <h3>{{pelicula.title}}</h3>\r\n                <!-- <ul class=\"list-group list-group-horizontal\">\r\n                    <li class=\"list-group-item\">{{pelicula.genres}}</li>\r\n                </ul>                 -->\r\n            </div>\r\n            <div class=\"col\"><h3 class=\"float-right\"><span class=\"badge badge-pill badge-success\">{{pelicula.release_date | date:'yyyy'}}</span>\r\n            </h3></div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <star-rating \r\n                [value]=\"pelicula.vote_average\" \r\n                totalstars=\"10\" \r\n                checkedcolor=\"gold\" \r\n                uncheckedcolor=\"gray\" \r\n                size=\"16px\" \r\n                readonly=\"false\">\r\n                </star-rating>                \r\n            </div>\r\n            <div class=\"col text-white\"><p>Voto promedio:<span class=\"badge badge-pill badge-primary\"> {{pelicula.vote_average | number:'1.1-2'}}</span></p></div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col\">\r\n                <p class=\"text-justify\">{{pelicula.overview}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <h4>Frase célebre</h4>\r\n                <p>{{pelicula.tagline}}</p>\r\n                <p>Polularidad:<span class=\"badge badge-pill badge-primary\">{{pelicula.popularity | number:'.0-0'}} / 10</span></p>\r\n                \r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <button\r\n                    (click)=\"onReturn()\" \r\n                    class=\"btn btn-outline-light-green rounded-pill my-sm-0\">\r\n                    Regresar\r\n\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"row my-5\" *ngIf=\"cast.length > 0\">\r\n    <div class=\"col-12\">\r\n        <app-cast-slideshow [cast]=\"cast\"></app-cast-slideshow>\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { RatingModule } from 'ng-starrating';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    MovieComponent,\r\n    SearchComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    PipesModule,\r\n    RatingModule\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Movies } from 'src/app/interfaces/cartelera-response';\r\nimport { PeliculasService } from 'src/app/services/peliculas.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  public busqueda: string = \"\";\r\n  public movies: Movies[] = [];\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private peliculasService: PeliculasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe( params => {\r\n\r\n      // console.log(params.texto);\r\n      this.busqueda = params.texto\r\n\r\n      this.peliculasService.searchMovies(params.texto).subscribe( movies => {\r\n        this.movies = movies\r\n        // console.log(movies);\r\n        \r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","<h2>Resultados para <small class=\"text-capitalize\">{{busqueda}}</small></h2>\r\n<hr>\r\n<div class=\"row\">\r\n    <div class=\"col\">\r\n        <app-peliculas-poster-grid [movies]=\"movies\"></app-peliculas-poster-grid>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PosterPipe } from './poster.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PosterPipe],\r\n  exports: [\r\n    PosterPipe\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class PipesModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'poster'\r\n})\r\nexport class PosterPipe implements PipeTransform {\r\n\r\n  transform(poster: string): string {\r\n\r\n    if (poster) {\r\n      return `https://image.tmdb.org/t/p/w440_and_h660_face${ poster }`;\r\n    } else {\r\n      return './assets/no-image.jpg';\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { CarteleraResponse, Movies } from '../interfaces/cartelera-response';\r\nimport { Cast, Credits } from '../interfaces/credits';\r\nimport { Genre, GenreElement } from '../interfaces/genre';\r\nimport { MovieDetails } from '../interfaces/movie-details';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PeliculasService {\r\n\r\n  private baseUrl: string = 'https://api.themoviedb.org/3';\r\n  private carteleraPage = 1;\r\n  public isLoadig = false;\r\n\r\n  constructor( private http: HttpClient) { }\r\n\r\n  get params(){\r\n    return {\r\n      api_key : '7dcfbc663d7e47cd64905f6ecd456b2d',\r\n      language: 'es-ES',\r\n      page    : this.carteleraPage.toString()    \r\n    }\r\n  }\r\n\r\n  resetCarteleraPage(){\r\n    this.carteleraPage = 1;\r\n  }\r\n\r\n  getCartelera(): Observable<Movies[]>{\r\n    \r\n    if (this.isLoadig) {\r\n      // cargando peliculas\r\n      return of([]);\r\n    }\r\n    \r\n    this.isLoadig = true;\r\n    return this.http.get<CarteleraResponse>(`${ this.baseUrl }/movie/now_playing`,{\r\n      params: this.params\r\n    }).pipe(\r\n      map( (resp) => resp.results ),\r\n      tap(() => {\r\n        this.carteleraPage +=1;\r\n        this.isLoadig = false;\r\n      })\r\n    )\r\n  }\r\n\r\n  searchMovies(texto:string):Observable<Movies[]>{\r\n    const params = {...this.params, page: '1', query: texto};\r\n\r\n    //https://api.themoviedb.org/3/search/movie\r\n    return this.http.get<CarteleraResponse>(`${this.baseUrl}/search/movie`, {\r\n      params\r\n    }).pipe(\r\n      map( resp => resp.results)\r\n    )\r\n  }\r\n\r\n  getMovieDetails(id: string){\r\n\r\n    return this.http.get<MovieDetails>(`${this.baseUrl}/movie/${id}`,{\r\n      params: this.params\r\n    }).pipe(\r\n      catchError(err => of(null))\r\n    );\r\n  }\r\n\r\n  getCredits(id: string):Observable<Cast[]>{\r\n    // https://api.themoviedb.org/3/movie/347158/credits?api_key=7dcfbc663d7e47cd64905f6ecd456b2d&language=es-ES\r\n\r\n    return this.http.get<Credits>(`${this.baseUrl}/movie/${id}/credits`,{\r\n      params: this.params\r\n    }).pipe(\r\n      map( resp => resp.cast),\r\n      catchError(err => of([]))\r\n    );\r\n  }\r\n  getGenre():Observable<GenreElement[]>{\r\n    // https://api.themoviedb.org/3/genre/movie/list?api_key=7dcfbc663d7e47cd64905f6ecd456b2d&language=es-ES\r\n\r\n    return this.http.get<GenreElement[]>(`${this.baseUrl}/genre/movie/list`,{\r\n      params: this.params\r\n    }).pipe(\r\n      map(resp => resp),\r\n      catchError(err => of([]))\r\n      \r\n\r\n    )\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}